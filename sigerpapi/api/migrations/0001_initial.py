# Generated by Django 3.0.3 on 2020-03-02 18:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=120, verbose_name='Razão Social')),
                ('fantasy_name', models.CharField(max_length=120, verbose_name='Nome Fantasia')),
                ('cnpj', models.CharField(max_length=14, unique=True, verbose_name='CNPJ')),
            ],
            options={
                'db_table': 'client',
            },
        ),
        migrations.CreateModel(
            name='Funcionario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nome')),
                ('enrolment', models.CharField(max_length=12, verbose_name='Matrícula')),
                ('cpf', models.CharField(max_length=11, unique=True, verbose_name='CPF')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('email', models.CharField(max_length=120, unique=True, verbose_name='E-mail')),
                ('admission_date', models.DateField(blank=True, null=True, verbose_name='Data de Admissão')),
            ],
            options={
                'db_table': 'people',
            },
        ),
        migrations.CreateModel(
            name='ClienteFuncionario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Início do Contrato')),
                ('cliente', models.ForeignKey(db_column='client_id', on_delete=django.db.models.deletion.CASCADE, to='api.Cliente', verbose_name='Cliente')),
                ('funcionario', models.ForeignKey(db_column='funcionario_id', on_delete=django.db.models.deletion.CASCADE, to='api.Funcionario', verbose_name='Funcionário')),
            ],
            options={
                'db_table': 'client_people',
            },
        ),
        migrations.CreateModel(
            name='Ponto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Dia')),
                ('marking_in', models.PositiveIntegerField(blank=True, null=True, verbose_name='Entrada')),
                ('marking_out', models.PositiveIntegerField(blank=True, null=True, verbose_name='Saída')),
                ('justification', models.CharField(blank=True, max_length=255, null=True, verbose_name='Justificativa')),
                ('funcionario', models.ForeignKey(db_column='people_id', on_delete=django.db.models.deletion.CASCADE, to='api.Funcionario', verbose_name='Funcionário')),
            ],
            options={
                'db_table': 'time_register',
                'unique_together': {('funcionario', 'date')},
            },
        ),
        migrations.CreateModel(
            name='FuncionarioEscala',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.PositiveIntegerField(verbose_name='Dia da Semana')),
                ('marking_in', models.PositiveIntegerField(blank=True, null=True, verbose_name='Entrada')),
                ('marking_out', models.PositiveIntegerField(blank=True, null=True, verbose_name='Saída')),
                ('funcionario', models.ForeignKey(db_column='people_id', on_delete=django.db.models.deletion.CASCADE, to='api.Funcionario', verbose_name='Funcionário')),
            ],
            options={
                'db_table': 'people_times',
                'unique_together': {('funcionario', 'weekday')},
            },
        ),
    ]
